Cada vez que vayas a terminar trabajando con un repositorio remoto, lo primero que tienes que hacer es clonarlo.
Pero debes clonarlo en un directorio específico.




Comandos CLI (bash)
pwd		Saber en qué directorio estoy
cd /d		Cambias de torre
cd ..		Para ir hacia el directorio de arriba
ls -la		Ver qué es lo que hay donde estás parado
cd <nombrecarpeta>     Para ir a esa carpeta

Comandos git
git status				Diferencia entre tu repositorio local y el remoto
git add .				Guarda lo que tenemos en la máquina en el index
git commit -m "Cuaquier comentario"	Crea un commit con ese nombre
git push				Sube el commit al repositorio remoto

...............................

Anatomía Java.-

project		(minúsculas)
	packets		(minúsculas)

		classes		(Pascal)
			methods		(Camel)


-------------------------------

Naming conventions


1) Pascal	(comienza con mayúscula)
	UserName
	MonthOfTheYear

2) Camel	(comienza con minúscula)
	ageOfTheUser
	typeOfVariable
	grupoDeAmigos

3) Snake	(guión bajo)
	age_of_the_user
	STEPS_OF_DEFINITIONS

---------------------------------

public		La clase/método podrá ser llamado desde otra clase
private		El método sólo podrá ser llamado dentro de la misma clase donde se ha creado

static		El métoco podrá ser llamado como: Clase.método
		De no ponerse, no aparecerá cuando se ponga el "."

----------------------------------

21/09/21
Tareas para proyecto1.-
https://github.com/develop18/proyecto1


1) Crea un nuevo paquete para la empresa com.Informative
2) Dentro del paquete crea 3 clases:
	a) Una clase que contiene el método principal de este proyecto. Inicialmente el bloque de este método estará definido pero lo dejamos por ahora vacío
	b) Una clase que se encargará de datos meteorológicos. Dentro de ella 2 métodos:
		- Imprime la temperatura actual
		- Imprime la humedad actual
	c) Una clase que se dedica a informar en qué lugar vivimos. Sus métodos:
		- Imprimir el nombre de la ciudad
		- Imprimir el código postal
		- Imprimir el país
3) En la clase principal, imprime en este orden:
	a) País
	b) Ciudad
	c) Temperatura
	d) Humedad

-----------------------------------



23/09/21

Most used data types:
Primitives.-
	integral:
		- byte		(1B)
		- short		(2B)
		- int		(4B)
		- long		(8B)

	floating point:
		- float		(4B)
		- double	(8B)

	caracter:
		- char		(2B)

	boolean:	
		- boolean	(1bit)	No está definido con exactitud. Depende de la JVM
		
double puede almacenar: 1.7976931348623157 x 10308, 4.9406564584124654 x 10-324
int puede almacenar: -2,147,483,648 .. 2,147,483,647


Class type.-
	String:
		- referencias. Son instancias de una clase	(22B ?)

La variable creada a partir de la clase cadena es un objeto. El objeto String tiene sus métodos que son estáticos. Pero el objeto creado a partir de él tiene sus métodos y como él no es una clase esos métodos ya no se pueden considerar estáticos.

...............

Tarea.-
Tipos de variables

1) 
	a. Crear una variable para la temperatura en grados Centígrados
----> Nos hemos quedado aquí
	b. Crear otra variable que convierta la primera en Fahrenheit (0°C × 9/5) + 32 = 32°F)
	c. Imprimir ambas con un mensaje "En ºC es: .... y en ºF es ...."

2)
	a. Crear una variable para la edad de un usuario
	b. Una variable para saber qué edad tendrá dentro de 14 años
	c. Otra variable para saber qué edad tenía hace 3 años
	d. Imprimir las 3 variables con un mensaje

3) 	En cada uno de los siguientes incisos imprimir el resultado:

	a. Crear una variable booleana true. Otra false.
	b. Crear 3 variables enteras a, b y c con valores respectivos 4, 8 y 8
	c. Crear una variable booleana con operador lógico a < b
	d. Crear una variable booleana con operador lógico a > b
	e. Crear una variable booleana con operador lógico a <= b
	f. Crear una variable booleana con operador lógico a >= b
	g. Crear una variable booleana con operador lógico a <= c
	h. Crear una variable booleana con operador lógico a >= c
	i. Crear una variable booleana con operador lógico b <= c
	j. Crear una variable booleana con operador lógico b >= c
	k. Crear una variable booleana con operador lógico a == b
	l. Crear una variable booleana con operador lógico a == c
	m. Crear una variable booleana con operador lógico c == a
	n. Crear una variable booleana con operador lógico c == b

4) 
	a. Crear una variable a partir de la clase String que tenga minúsculas y mayúsculas
	b. Crear otra variable vacía a partir de String
	c. Crear otra variable a partir de String pero esta vez será sólo de espacios en blanco
	d. Con alguno de los métodos de esa clase, mostrar la longitud de cada una de esas variables
	e. Con alguno de los métodos de la clase mostrar si c/u de esas variables es vacía
	f. Con alguno de los métodos de la clase mostrar si c/u de esas variables es una cadena en blanco


5)
	a. Crear una variable de cadena con el contenido "Esto es positivo. Estamos ganando tiempo"
	b. Crear una variable que use el método charAt para averiguar qué letra hay en una posición determinada de la cadena creada anteriormente. O espacios.
	

6) 
	a. Crear una variable de cadena con cualquier contenido
	b. Averiguar con qué métodos puedo conocer el índice de un carácter que existe dentro de la cadena. Guardarlo en una variable e imprimirlo.


7)
	a. Crear una variable de cadena con contenido: "tenemos que hacer esto?"
	b. Averiguar qué hace el método lastIndexOf. Probar con la letra 'h' y luego con la 'e'

8)
	a. Crear una variable de cadena con contenido: "Sí, "
	b. Crear una variable de cadena con contenido: "es importante."
	b. Averiguar qué hace el método concat. Usarlo para concatenar la segunda con la primera y luego la primera con la segunda.


...........

Tarea.-
Operador "+". Cadenas y/o números


1)	
	a. Crear 2 variables de cadena part1 y part2 con cualquier contenido. Imprimir
		part1 + part2
		part1 + " " + part2
		part2 + part1

2)
	¿Qué se espera en los siguientes casos?
	a. "My favourite number is " + 7
	b. "My favourite number is " + 200.12
	c. 7 + 200.12
	d. "My favourite number is " + 7 + 200.12
	e. 7 + 200.12 + " is my favourite number"
	f. "My favourite number is " + (7 + 200.12)
	g. Crea una variable numérica que almacene 7 + 200.12 e imprime un mensaje diciendo que ese es tu número favorito.

............
Nota.-
Variables de referencia a partir de String

String s1 = "Hello"
String s2 = s1

=> s1 y s2 son diferentes pero referencian al mismo valor

............

Tarea.-
Instanciando objetos.


ClassName objectName = new ClassName(Parameters);
Pero para la clase String no es necesario porque esa clase es inmutable, es decir, su valor NO se puede cambiar. Si lo intentamos lo que se crea es una referencia a otra dirección.

Reading input from keyboard:

Scanner input = new Scanner(System.in);
float f = input.nextFloat();


1)	
	a. Crea un objeto de la clase Point e imprímelo
	

2)
	a. Crea un objeto de la clase Scanner, que nos permite leer el teclado
	
3)
	a. Escribe un método que nos pida un nombre y espere a que lo tecleemos. Imprimir el nombre.
	b. Método que tome sucesivamente 2 valores numéricos enteros del teclado y diga si el primero es mayor que el segundo.
	c. Tomar sucesivamente 3 valores numéricos de punto flotante y realizar A+B/C. Agrupar por pares y predecir resultado para aprender las precedencias de las operaciones.
	d. Pedir un nombre y una edad. Imprimir con los mensajes correspondientes.
	e. Método que nos pida el nombre completo (nombre y apellido) y lo muestre. (Diferencia entre los métodos next y nextline)
	f. Nombre completo (apellidos) y edad, en la misma pregunta. El usuario da <enter> después del nombre completo
	System.out.println(s.nextline() + "! you are " + s.nextInt() + " years old.")


..........
Tema.-
Type faster

Ctrl + Left arrow		Mueve cursor una palabra a la izquierda
Ctrl + Right arrow		Mueve cursor una palabra a la derecha
[Fn +] Inicio			Mueve cursor al inicio de la línea
[Fn +] Fin			Mueve cursor al final de la línea
RePag (PageUp)			Mueve cursor al inicio del fichero
AvPag (PageDown)		Mueve cursor al final del fichero. Si el fichero cubre más de una 					página, presionar PageDown otra vez

Ctrl + Down arrow		Scroll bar hacia abajo
Ctrl + Up arrow			Scroll bar hacia arriba

Alt + Left/Right arrow		Selecciona la siguiente pestaña del editor (izquierda/derecha)

Shift ( + anteriores) 		Selecciona el pedazo que vaya recorriendo
Shift + Inicio			Selecciona hasta el inicio de la línea
Shift + End			Selecciona hasta el final de la línea
Shift + Ctrl + Home		Selecciona hasta el inicio del fichero
Shift + Ctrl + End		Selecciona hasta el final del fichero
Shift + Up arrow		Selecciona hasta la misma posición en la línea de arriba
Shift + Down arrow		Selecciona hasta la misma posición en la línea de abajo
Ctrl + A			Selecciona todo el fichero
Ctrl + w			Va ampliando la selección sucesivamente a partir de donde estoy
				
Shift + Backspace		Borra hacia atrás tabulaciones, sin saltar a la línea de arriba
Ctrl + d			Duplica la línea donde estoy
Ctrl + x			Borra la línea completa donde estoy
Ctrl + / (Numpad)		Comenta la línea (o varias líneas, si están seleccionadas)
				Para quitarlo, nuevamente presionar: Ctrl + / (Numpad)
Ctrl + Shift + / (Numpad)	Abre y cierra un bloque de comentario
Shift + Alt + Up arrow		Sube la línea donde estoy
Shift + Alt + Down arrow	Baja la línea donde estoy


Ctrl + Alt + s			Abre diálogo de Settings
Ctrl + Shift + f		Busca dentro de ese path
Ctrl + f			Busca dentro del fichero que tengo activo
Alt + j				Va adicionando a la selección el siguiente encontrado
Ctrl + mouse			Pequeña info
Ctrl + N			Ir a clase
Ctrl + G			Ir a línea
Ctrl + Alt + B			Ir a implementación
Ctrl + Shift + B		Ir a declaración del tipo	
Shift + F10			Ejecutar

..........

Tarea.-
Autoincremento y autodecremento. Operador de asignación aumentada

1) 
	a. Crear una variable entera y asignarle un valor
	b. Imprimir su valor autoincrementado

2) 
	a. Crear una variable entera y asignarle un valor
	b. Imprimir su valor autodecrementado

3) 
	a. Crear una variable x y asignarle un valor 6
	b. ¿Qué producen las siguientes asignaciones?
		I) x += 1
		II) x += 3
		III) x *= 2
		IV) x *= 1
		V) x *= 5+1
		VI) x *= x
 
...........

Tema.-
Relational operators: ==, !=, >, >=, <. >=

boolean b1 = ( 25 == 5*5) // true
boolean b2 = ( 2 == 3) // false
boolean b3 = (2 + 3) == (6 - 1) // true
boolean b4 = (2 + 3) != (6 - 1) // false
Los paréntesis son opcionales. Sólo para hacer el código más legible

...........

Tema.-
Lógical operators: Para construir operaciones complejas. Se usan entre valores booleanos y su resultado es booleano también.
AND	&&
OR	||
NOT	!


Tarea.-
1) ¿Cuál es el resultado de esta operación? ¿Es verdadera?
	boolean b1 = true && true;
	boolean b2 = b1 && false && true;
	boolean b3 = b2 || true;
	boolean b4 = !b2
	boolean b5 = !(b4 && b2);
...........

Tema.-
Conditional operator

booleanExpression ? expression1 : expression2

Tarea.-

1) ¿Cuál es el valor que toma la variable i?
	int a = 10;
	int b = 15;
	int max = a > b? a a : b;

2) 
	String name = "Mi academia";
	System.out.println ( name.isEmpty() ? "No existe" : name)
	a. ¿Qué hace el anterior bloque? 
	b. ¿Qué ocurre si hago vacía la variable name?
	c. ¿Qué ocurre si niego el método? (!name.isEmpty())

...........

Tarea.-
If statement



